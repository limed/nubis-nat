#!/bin/bash

# Nubis library, installed via nubis-base
[ -e /usr/local/lib/nubis/nubis-lib.sh ] && . /usr/local/lib/nubis/nubis-lib.sh || exit 1

export AWS_DEFAULT_REGION=$(get_region)

function __my_az() {
    local az=$1
    local region=$(get_region)
    local availability_zone=($(aws --region "${region}" ec2 describe-availability-zones --query "AvailabilityZones[0:3].ZoneName" --output text))
    if [[ ${availability_zone[0]} == ${az} ]]; then
        echo "Az1"
    elif [[ ${availability_zone[1]} == ${az} ]]; then
        echo "Az2"
    else
        echo "Az3"
    fi
}

function __get_logical_id() {

    if [ -z "$1" ] || [ -z "$2" ]; then echo "Usage: $FUNCNAME [stackname] [resource name]"; exit 1; fi

    local stackname=$1
    local search_string=$2

    local logical_id=$(aws cloudformation describe-stack-resources --stack-name "${stackname}" --query "StackResources[?LogicalResourceId == \`${search_string}\`].PhysicalResourceId" --output text)
    echo "${logical_id}"
}

function __get_stack_output() {

    if [ -z "$1" ] || [ -z "$2" ]; then echo "Usage: $FUNCNAME [stackname] [output key]"; exit 1; fi

    local stackname=$1
    local output_key=$2

    local output_value=$(aws cloudformation describe-stacks --stack-name "${stackname}" --query "Stacks[].Outputs[?OutputKey == \`${output_key}\`].OutputValue" --output text)
    echo "${output_value}"
}

function get_eip_id() {

    local environment=${NUBIS_ENVIRONMENT^}
    local stackname=${NUBIS_STACK}

    local az=$(get_availability_zone)
    local my_az=$(__my_az ${az})

    logical_id=$(__get_logical_id ${stackname} ${environment}VPCStack)
    eip_id=$(__get_stack_output ${stackname} Eip${my_az})

    echo "${eip_id}"
}

# Meat and potatoes of script

AVAILABILITY_ZONE=$(get_availability_zone)
ENI_ID=$(get_eni_id eth0)
INSTANCE_ID=$(get_instance_id)

echo -n "Waiting for instance to come up ... "
aws ec2 wait instance-running --instance-ids ${INSTANCE_ID}
echo "Done"

# First, check with CloudFormation to see if we can find our IP
attempts=0
until [ ! -z "${ELASTICIP_ID}" ] || [ "${attempts}" -eq 10 ]; do
    log "Waiting on Elastic IP to be ready"
    ELASTICIP_ID=$(get_eip_id)
    sleep 5
    let attempts++
done

if [[ -z "${INSTANCE_ID}" ]]; then
    log "ERROR: Instance ID not found"
    exit 1
fi

aws ec2 associate-address --network-interface-id ${ENI_ID} --allocation-id ${ELASTICIP_ID}
RV=$?

if [[ ${RV} != 0 ]]; then
    log "ERROR: Unable to associate elastic IP ${ELASTICIP_ID} to instance ${INSTANCE_ID} (${ENI_ID})"
    exit ${RV}
else
    # We assume that if return value is not 0 then we have successfully associated an EIP
    log "SUCCESS: Associated ${ELASTICIP_ID} to instance ${INSTANCE_ID} (${ENI_ID})"
fi
